// Generated by BUCKLESCRIPT VERSION 5.0.3, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var React = require("react");
var Random = require("bs-platform/lib/js/random.js");
var $$String = require("bs-platform/lib/js/string.js");
var Caml_array = require("bs-platform/lib/js/caml_array.js");
var ReactDOMRe = require("reason-react/src/ReactDOMRe.js");
var Cell$ReactHooksTemplate = require("./Cell.bs.js");
var Constants$ReactHooksTemplate = require("./Constants.bs.js");

var initialBoard = $$Array.make_matrix(4, 4, 0);

Caml_array.caml_array_set(Caml_array.caml_array_get(initialBoard, Random.$$int(4)), Random.$$int(4), 2);

function App(Props) {
  var match = React.useReducer((function (state, action) {
          return /* record */[/* board */action[0]];
        }), /* record */[/* board */initialBoard]);
  var rowStyle = {
    display: "flex",
    flexFlow: "row"
  };
  var rowExtraStyle = {
    marginBottom: Constants$ReactHooksTemplate.margin
  };
  var board = $$Array.mapi((function (y, row) {
          var match = y === 3;
          return React.createElement("div", {
                      key: String(y),
                      className: "row",
                      style: match ? rowStyle : ReactDOMRe.Style[/* combine */0](rowStyle, rowExtraStyle)
                    }, $$Array.mapi((function (x, cell) {
                            return React.createElement(Cell$ReactHooksTemplate.make, {
                                        children: cell,
                                        last: x === 3,
                                        key: $$String.concat(", ", /* :: */[
                                              String(x),
                                              /* :: */[
                                                String(y),
                                                /* [] */0
                                              ]
                                            ])
                                      });
                          }), row));
        }), match[0][/* board */0]);
  return React.createElement("div", {
              style: {
                display: "flex",
                justifyContent: "center"
              }
            }, React.createElement("div", {
                  style: {
                    backgroundColor: "#bbada0",
                    display: "flex",
                    height: "85.25vw",
                    padding: "1.75vw",
                    width: "85.25vw",
                    borderRadius: Constants$ReactHooksTemplate.borderRadius,
                    flexFlow: "column"
                  }
                }, board));
}

var make = App;

exports.initialBoard = initialBoard;
exports.make = make;
/* initialBoard Not a pure module */
